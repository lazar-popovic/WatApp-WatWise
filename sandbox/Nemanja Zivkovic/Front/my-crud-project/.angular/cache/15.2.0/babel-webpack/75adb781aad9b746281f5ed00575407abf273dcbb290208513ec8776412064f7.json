{"ast":null,"code":"import * as __NgCli_bootstrap_1 from \"@angular/platform-browser\";\nimport { AppModule } from './app/app.module';\nimport * as i0 from \"@angular/core\";\n__NgCli_bootstrap_1.platformBrowser().bootstrapModule(AppModule).catch(err => console.error(err));\nconst loginButton = document.querySelector('.login-button');\nconst overlay = document.querySelector('.overlay');\nconst loginForm = document.querySelector('.login-form');\nif (loginButton && overlay && loginForm) {\n  loginButton.addEventListener('click', () => {\n    overlay.style.display = 'block';\n    loginForm.style.display = 'block';\n  });\n  overlay.addEventListener('click', () => {\n    overlay.style.display = 'none';\n    loginForm.style.display = 'none';\n  });\n}\nclass CrudApp {\n  constructor() {\n    this.userList = [];\n  }\n  createUser(name, email) {\n    const id = this.userList.length + 1;\n    const user = {\n      id,\n      name,\n      email\n    };\n    this.userList.push(user);\n  }\n  readUser(id) {\n    return this.userList.find(user => user.id === id);\n  }\n  readAllUsers() {\n    return this.userList;\n  }\n  updateUser(id, name, email) {\n    const user = this.userList.find(user => user.id === id);\n    if (user) {\n      user.name = name;\n      user.email = email;\n    }\n  }\n  deleteUser(id) {\n    const index = this.userList.findIndex(user => user.id === id);\n    if (index !== -1) {\n      this.userList.splice(index, 1);\n    }\n  }\n}\nexport class CartComponent {\n  constructor() {\n    this.items = [];\n  }\n  addToCart() {\n    this.items.push({\n      name: 'Product',\n      price: 9.99\n    });\n    console.log('Item added to cart:', this.items);\n  }\n}\nCartComponent.ɵfac = function CartComponent_Factory(t) {\n  return new (t || CartComponent)();\n};\nCartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CartComponent,\n  selectors: [[\"app-cart\"]],\n  decls: 2,\n  vars: 0,\n  consts: [[1, \"btn-add-to-cart\", 3, \"click\"]],\n  template: function CartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"button\", 0);\n      i0.ɵɵlistener(\"click\", function CartComponent_Template_button_click_0_listener() {\n        return ctx.addToCart();\n      });\n      i0.ɵɵtext(1, \"Add to Cart\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\".btn-add-to-cart[_ngcontent-%COMP%] {\\n        background: linear-gradient(to bottom, #ff7f00, #ff5500);\\n        border: none;\\n        border-radius: 5px;\\n        color: #fff;\\n        cursor: pointer;\\n        font-size: 16px;\\n        padding: 10px 20px;\\n        text-align: center;\\n        text-decoration: none;\\n        text-shadow: 0 1px 1px rgba(0, 0, 0, 0.3);\\n      }\\n\\n      .btn-add-to-cart[_ngcontent-%COMP%]:hover {\\n        background: linear-gradient(to bottom, #ff5500, #ff7f00);\\n      }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9tYWluLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7TUFDTTtRQUNFLHdEQUF3RDtRQUN4RCxZQUFZO1FBQ1osa0JBQWtCO1FBQ2xCLFdBQVc7UUFDWCxlQUFlO1FBQ2YsZUFBZTtRQUNmLGtCQUFrQjtRQUNsQixrQkFBa0I7UUFDbEIscUJBQXFCO1FBQ3JCLHlDQUF5QztNQUMzQzs7TUFFQTtRQUNFLHdEQUF3RDtNQUMxRCIsInNvdXJjZXNDb250ZW50IjpbIlxuICAgICAgLmJ0bi1hZGQtdG8tY2FydCB7XG4gICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICNmZjdmMDAsICNmZjU1MDApO1xuICAgICAgICBib3JkZXI6IG5vbmU7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICBwYWRkaW5nOiAxMHB4IDIwcHg7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICB0ZXh0LXNoYWRvdzogMCAxcHggMXB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcbiAgICAgIH1cblxuICAgICAgLmJ0bi1hZGQtdG8tY2FydDpob3ZlciB7XG4gICAgICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICNmZjU1MDAsICNmZjdmMDApO1xuICAgICAgfVxuICAgICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";AAEA,SAASA,SAAS,QAAQ,kBAAkB;;AAG5CC,qCAAwB,CAACC,eAAe,CAACF,SAAS,CAAC,CAChDG,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;AAGnC,MAAMG,WAAW,GAAuBC,QAAQ,CAACC,aAAa,CAAC,eAAe,CAAC;AAC/E,MAAMC,OAAO,GAAuBF,QAAQ,CAACC,aAAa,CAAC,UAAU,CAAC;AACtE,MAAME,SAAS,GAA2BH,QAAQ,CAACC,aAAa,CAAC,aAAa,CAAC;AAE/E,IAAIF,WAAW,IAAIG,OAAO,IAAIC,SAAS,EAAE;EACvCJ,WAAW,CAACK,gBAAgB,CAAC,OAAO,EAAE,MAAK;IACzCF,OAAO,CAACG,KAAK,CAACC,OAAO,GAAG,OAAO;IAC/BH,SAAS,CAACE,KAAK,CAACC,OAAO,GAAG,OAAO;EACnC,CAAC,CAAC;EAEFJ,OAAO,CAACE,gBAAgB,CAAC,OAAO,EAAE,MAAK;IACrCF,OAAO,CAACG,KAAK,CAACC,OAAO,GAAG,MAAM;IAC9BH,SAAS,CAACE,KAAK,CAACC,OAAO,GAAG,MAAM;EAClC,CAAC,CAAC;;AASJ,MAAMC,OAAO;EAGXC;IACE,IAAI,CAACC,QAAQ,GAAG,EAAE;EACpB;EAEAC,UAAU,CAACC,IAAY,EAAEC,KAAa;IACpC,MAAMC,EAAE,GAAG,IAAI,CAACJ,QAAQ,CAACK,MAAM,GAAG,CAAC;IACnC,MAAMC,IAAI,GAAG;MAAEF,EAAE;MAAEF,IAAI;MAAEC;IAAK,CAAE;IAChC,IAAI,CAACH,QAAQ,CAACO,IAAI,CAACD,IAAI,CAAC;EAC1B;EAEAE,QAAQ,CAACJ,EAAU;IACjB,OAAO,IAAI,CAACJ,QAAQ,CAACS,IAAI,CAACH,IAAI,IAAIA,IAAI,CAACF,EAAE,KAAKA,EAAE,CAAC;EACnD;EAEAM,YAAY;IACV,OAAO,IAAI,CAACV,QAAQ;EACtB;EAEAW,UAAU,CAACP,EAAU,EAAEF,IAAY,EAAEC,KAAa;IAChD,MAAMG,IAAI,GAAG,IAAI,CAACN,QAAQ,CAACS,IAAI,CAACH,IAAI,IAAIA,IAAI,CAACF,EAAE,KAAKA,EAAE,CAAC;IACvD,IAAIE,IAAI,EAAE;MACRA,IAAI,CAACJ,IAAI,GAAGA,IAAI;MAChBI,IAAI,CAACH,KAAK,GAAGA,KAAK;;EAEtB;EAEAS,UAAU,CAACR,EAAU;IACnB,MAAMS,KAAK,GAAG,IAAI,CAACb,QAAQ,CAACc,SAAS,CAACR,IAAI,IAAIA,IAAI,CAACF,EAAE,KAAKA,EAAE,CAAC;IAC7D,IAAIS,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAACb,QAAQ,CAACe,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;;EAElC;;AA+BF,OAAM,MAAOG,aAAa;EA1B1BjB;IA2BE,UAAK,GAAU,EAAE;;EAEjBkB,SAAS;IACP,IAAI,CAACC,KAAK,CAACX,IAAI,CAAC;MAAEL,IAAI,EAAE,SAAS;MAAEiB,KAAK,EAAE;IAAI,CAAE,CAAC;IACjD/B,OAAO,CAACgC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAACF,KAAK,CAAC;EAChD;;AANWF,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAK;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MAvBtBC,iCAAsD;MAAtBA;QAAA,OAASC,eAAW;MAAA,EAAC;MAACD,2BAAW;MAAAA,iBAAS","names":["AppModule","__NgCli_bootstrap_1","bootstrapModule","catch","err","console","error","loginButton","document","querySelector","overlay","loginForm","addEventListener","style","display","CrudApp","constructor","userList","createUser","name","email","id","length","user","push","readUser","find","readAllUsers","updateUser","deleteUser","index","findIndex","splice","CartComponent","addToCart","items","price","log","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["D:\\PMF\\SI\\wattwise\\sandbox\\Nemanja Zivkovic\\Front\\my-crud-project\\src\\main.ts"],"sourcesContent":["import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n\nconst loginButton: HTMLElement | null = document.querySelector('.login-button');\nconst overlay: HTMLElement | null = document.querySelector('.overlay');\nconst loginForm: HTMLFormElement | null = document.querySelector('.login-form');\n\nif (loginButton && overlay && loginForm) {\n  loginButton.addEventListener('click', () => {\n    overlay.style.display = 'block';\n    loginForm.style.display = 'block';\n  });\n\n  overlay.addEventListener('click', () => {\n    overlay.style.display = 'none';\n    loginForm.style.display = 'none';\n  });\n}\n\ninterface User {\n  id: number;\n  name: string;\n  email: string;\n}\n\nclass CrudApp {\n  private userList: User[];\n\n  constructor() {\n    this.userList = [];\n  }\n\n  createUser(name: string, email: string): void {\n    const id = this.userList.length + 1;\n    const user = { id, name, email };\n    this.userList.push(user);\n  }\n\n  readUser(id: number): User | undefined {\n    return this.userList.find(user => user.id === id);\n  }\n\n  readAllUsers(): User[] {\n    return this.userList;\n  }\n\n  updateUser(id: number, name: string, email: string): void {\n    const user = this.userList.find(user => user.id === id);\n    if (user) {\n      user.name = name;\n      user.email = email;\n    }\n  }\n\n  deleteUser(id: number): void {\n    const index = this.userList.findIndex(user => user.id === id);\n    if (index !== -1) {\n      this.userList.splice(index, 1);\n    }\n  }\n}\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-cart',\n  template: `\n    <button class=\"btn-add-to-cart\" (click)=\"addToCart()\">Add to Cart</button>\n  `,\n  styles: [\n    `\n      .btn-add-to-cart {\n        background: linear-gradient(to bottom, #ff7f00, #ff5500);\n        border: none;\n        border-radius: 5px;\n        color: #fff;\n        cursor: pointer;\n        font-size: 16px;\n        padding: 10px 20px;\n        text-align: center;\n        text-decoration: none;\n        text-shadow: 0 1px 1px rgba(0, 0, 0, 0.3);\n      }\n\n      .btn-add-to-cart:hover {\n        background: linear-gradient(to bottom, #ff5500, #ff7f00);\n      }\n    `,\n  ],\n})\nexport class CartComponent {\n  items: any[] = [];\n\n  addToCart() {\n    this.items.push({ name: 'Product', price: 9.99 });\n    console.log('Item added to cart:', this.items);\n  }\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}